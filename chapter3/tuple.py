# 튜플(tuple)
"""
저장된 값을 변경할 수 없는 리스트
리스트와 마찬가지로 각 요소를 구분하기 위한 인덱스가 부여되고 슬라이싱도 지원
이미 저장된 값 이외에는 추가, 수정, 삭제가 불가능

튜플은 소괄호(()) 나 tuple() 함수를 이용해서 생성
값들을 콤마(,) 로 분리하여 전달하면 자동으로 튜플이 생성
"""

# 튜플 자료형의 예시
t1 = (1, 2, 3)
print(t1)  # (1,2,3)

# 괄호 없이 사용 가능
t2 = 1, 2, 3
print(t2)  # (1,2,3)


# 튜플은 자료형을 만들기보다는 함수 만들 때 사용함.

### 함수의 값 반환
def sample():
    return 1, 2


print(sample())  # (1, 2)
# 파이썬은 반환값이 2개이상이 가능하다. => 실제로는 괄호로 감싸서 자동으로 튜플로 반환하기 때문에 가능한거임.
# 자바, 자바스크립트, C 등은 하나의 리턴값만 존재한다.

list1 = [100, 3.14, 'hello']
print(list1)

# 리스트를 튜플로 변경
t3 = tuple([100, 3.14, 'hello'])
print(t3) # (100, 3.14, 'hello')

# 값을 1개만 보관하는 튜플을 생성할 경우에는 값과 콤마(,)를 반드시 함께 작성
t4 = (100)
print(t4) # 100  / 값으로 인식
print(type(t4)) # <class 'int'>

t5 = (100,)
print(t5) # (100,) / 튜플로 인식
print(type(t5))     # <class 'tuple'>

# 값을 swap 교환
a = 10
b = 20
print(a, b) # 10 20
# a, b = b, a # (a, b) = (b, a)
(a, b) = (b, a) # (a, b) = (b, a) 이렇게 해도 동일하다.
print(a, b) # 20 10
# 파이썬은 튜플을 이용하면 값 swap도 간단하게 할 수 있다.

a, b = 100, '홍길동' #이것도 튜플형태가 생략된 튜플임.
print(a)
print(b)
